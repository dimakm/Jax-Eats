{"version":3,"sources":["Map.js","TheMenuFilter.js","ErrorCatcher.js","App.js","serviceWorker.js","index.js"],"names":["Map","react_default","a","createElement","id","aria-label","role","tabIndex","Component","TheMenuFilter","openInfo","locationId","_this","props","markers","forEach","marker","window","google","maps","event","trigger","_this2","this","BurgerMenu","isOpen","noOverlay","className","type","autoFocus","placeholder","value","query","onChange","handleSearch","target","venues","map","site","onClick","venue","name","key","location","address","ErrorCatcher","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","children","App","getMap","index","document","getElementsByTagName","script","src","async","defer","parentNode","insertBefore","onerror","alert","initMap","fetchVenues","axios","get","URLSearchParams","client_id","client_secret","ll","v","limit","then","response","data","groups","items","allVenues","catch","console","log","getElementById","center","lat","lng","zoom","infowindow","InfoWindow","maxWidth","Marker","position","animation","Animation","DROP","title","push","addListener","setContent","concat","categories","shortName","formattedAddress","setAnimation","BOUNCE","setTimeout","open","close","filterVenues","hiddenMarkers","setVisible","match","RegExp","escapeRegExp","filter","test","every","src_ErrorCatcher","src_TheMenuFilter","filteredVenues","clearQuery","b","clickLocation","src_Map","Boolean","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb46b690.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Map extends Component {\n\n    render() {\n\n        return (\n            <div id=\"map\" aria-label=\"Map\" role=\"application\" tabIndex=\"-1\"></div>\n        )\n    }\n}\n\nexport default Map","import React, { Component } from 'react';\nimport { slide as Menu } from 'react-burger-menu';\n\n\nclass TheMenuFilter extends Component {\n\n  /* \n   openInfo: is called when a list item is clicked(or marker is clicked) to open the infowindow\n   depending on the id so if there's 2 venues with the same name it won't mistake and open\n   one instead of the other\n  */\n  openInfo = locationId => {\n    this.props.markers.forEach(marker => {\n      if (marker.id === locationId) {\n        window.google.maps.event.trigger(marker, \"click\")\n      }\n    })\n  }\n  \n  render () {\n    return (\n\n     <Menu isOpen noOverlay >\n        <p>\n          <i>Powered by Foursquare</i>\n        </p>\n        <div className=\"searchBar\" role=\"application\">\n          <input\n          type=\"text\"\n          autoFocus\n          id=\"theFilter\"\n          placeholder=\"Search...\"\n          aria-label=\"Search Restaurant\"\n          value={this.props.query}\n          onChange={event => this.props.handleSearch(event.target.value)}\n          />\n        </div>\n        <div className=\"theList\" aria-label=\"List of Venues\"> \n        <ul className=\"menu-result\">\n        {this.props.venues.map(site => (\n            <li role=\"menuitem\"\n              onClick={() => {\n                this.openInfo(site.venue.id);\n              }}\n              aria-label={site.venue.name}\n              tabIndex=\"0\"\n              id={site.venue.id}\n              key={site.venue.id}\n            >\n              <br/>\n              <b>{site.venue.name}</b>\n              <br/> \n              <i>{site.venue.location.address}</i>\n            </li>\n          ))}\n        </ul>\n         \n          </div>\n          </Menu>\n    );\n  }\n}\n\nexport default TheMenuFilter","import React, { Component } from 'react';\n\nclass ErrorCatcher extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    componentDidCatch(error, info) {\n      this.setState({ hasError: true });\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        return <h1>Oops, something went wrong.</h1>;\n      }\n      return this.props.children;\n    }\n  }\n\nexport default ErrorCatcher","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport escapeRegExp from 'escape-string-regexp';\nimport Map from './Map';\nimport TheMenuFilter from './TheMenuFilter';\nimport ErrorCatcher from './ErrorCatcher';\n\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      venues: [],\n      allVenues: [],\n      markers: [],\n      hiddenMarkers: [],\n      query: ''\n  }}\n\n  componentDidMount() {\n    this.fetchVenues()\n  }\n    \n  \n  //getMap function creates the needed script to load the map\n  getMap = () => {\n    let index  = window.document.getElementsByTagName(\"script\")[0] \n    let script = window.document.createElement(\"script\") \n    script.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCElDPaTh_n-WGrsOONc-2eR6eleOkoI-U&callback=initMap\"\n    script.async = true\n    script.defer = true\n    index.parentNode.insertBefore(script, index)\n    script.onerror = function() {\n      alert(\"Error, Map couldn't be loaded!\");\n    };\n    window.initMap = this.initMap;\n  }\n\n  \n  //fetching  the venues from foursquare.com \n  fetchVenues = () => {\n    const endPoint = \"https://api.foursquare.com/v2/venues/explore?\"\n    const parameters = {\n      client_id: \"TPY3XVOLGRYJPBQXQLDFP4XYNUT1SWHPXAYNE43TAN0AQIMI\",\n      client_secret: \"YK2SX5K032C0B3NJOHX1AVLAHXFJZ4LZXWSYTUASGVLFBWIK\",\n      query: \"food\",\n      ll: \"30.257158, -81.525561\",\n      v: \"20183009\",\n      limit: 15\n    }\n\n    \n    //Axios fetch Api to get the data from Foursquare, dependency https://github.com/axios/axios\n    axios.get(endPoint + new URLSearchParams(parameters))\n    .then(response => {\n      this.setState({\n        venues: response.data.response.groups[0].items,\n        allVenues: response.data.response.groups[0].items\n      }, this.getMap())\n    })\n    .catch(error => {\n      alert(`Foursquare venues data couldn't be fetched, try again please!`)\n      console.log(\"fetching data problem \" + error)\n    })\n  }\n\n\n  initMap = () => {\n    var map = new window.google.maps.Map(document.getElementById('map'), \n    {\n      center: {lat: 30.257158, lng: -81.525561}, \n      zoom: 16\n    })\n\n    const infowindow = new window.google.maps.InfoWindow({maxWidth: 200});\n    this.infowindow = infowindow\n    /*the reason I used forEach instead of map() because \n    map is causing a warning in the browser, array-callback-return warning\n    */\n    this.state.venues.forEach(site => {\n    //create marker\n      const marker = new window.google.maps.Marker({\n        position: {lat: site.venue.location.lat , lng: site.venue.location.lng},\n        map: map,\n        id : site.venue.id,\n        animation: window.google.maps.Animation.DROP,\n        title: site.venue.name\n        })\n      \n    this.state.markers.push(marker)\n    // Click on a marker, animation starts and infowindow opens\n      marker.addListener('click', function() {\n        infowindow.setContent(`\n                                  <h2>${site.venue.name}</h2>\n                                  <h3>Type: ${site.venue.categories[0].shortName}</h3>\n                                  <p>Address:${site.venue.location.formattedAddress[0]} \n                                              ${site.venue.location.formattedAddress[1]} \n                                              ${site.venue.location.formattedAddress[2]}\n                                  </p>\n                                  <p>lat: ${site.venue.location.lat}, long: ${site.venue.location.lng}</p>\n                                  <p> ${'<a href=\"https://foursquare.com/v/' +\n                                   site.venue.id + '\" target=\"_blank\">Read More on <b>Foursquare</b></a>'} </p>\n                                   <br><i>Info provided by Foursquare.</i>\n                                  `)\n        \n        //make the marker bounce for a short time then it stops\n        marker.setAnimation(window.google.maps.Animation.BOUNCE);\n        window.setTimeout(function(){marker.setAnimation(null);},1000);        \n\n        infowindow.open(map, marker)        })\n\n        //stop marker animaion and close infowindow when map is clicked\n        map.addListener('click', function(){\n                  marker.setAnimation(null);\n                  infowindow.close(map, marker) \n      })\n        }\n        )\n  }\n\n\n  /*\n   * Handling the search box changes\n  */\n  handleSearch = query => {\n    this.setState({ query })\n    this.state.markers.map(marker => marker.setVisible(true))\n    let filterVenues\n    let hiddenMarkers\n    if (query) {\n      const match = new RegExp(escapeRegExp(query), \"i\")\n      filterVenues = this.state.venues.filter(site =>\n        match.test(site.venue.name)\n      )\n      this.setState({ venues: filterVenues })\n      hiddenMarkers = this.state.markers.filter(marker =>\n        filterVenues.every(site => site.venue.name !== marker.title)\n      )\n      hiddenMarkers.forEach(marker => marker.setVisible(false))\n      this.setState({ hiddenMarkers })\n    } else {\n      this.setState({ venues: this.state.allVenues })\n      this.state.markers.forEach(marker => marker.setVisible(true))\n    }\n  }\n\n  \n\n  render() {\n\n    if (this.state.hasError) {\n      return <div id=\"Error-alert\" aria-label=\"Error Alert\">Oops, Something went wrong!</div>\n    } else {\n      return (\n      <main>\n        <ErrorCatcher>\n        \n        <div id=\"header\" aria-label=\"Header\">\n          <div id=\"Top-Header\" aria-label=\"Header\" tabIndex='0'>\n             <h1> St.Johns Town Center Eats </h1>\n             <h2>Jacksonville, Florida</h2>\n          </div>   \n        </div>\n\n        \n        <div id=\"container\" aria-label=\"Menu Container\">\n\n          <TheMenuFilter \n            markers={ this.state.markers } \n            filteredVenues={ this.filteredVenues }\n            query={this.state.query}\n            clearQuery={this.clearQuery}          \n            handleSearch={b => this.handleSearch(b)}\n            clickLocation={this.clickLocation}\n            venues={ this.state.venues }\n          />\n        </div>\n\n        <Map />\n\n        </ErrorCatcher>\n      </main>\n    );\n  }\n  }\n}\n\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}